using System.Collections;
using System.Collections.Generic;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;
using UnityEngine.WSA;

public class ReinforceUIManager : MonoBehaviour
{
    public Canvas Reinforce_Canvas;
    public Image[] Content_Img = new Image[3];  // 증강 내용 이미지
    public TMP_Text[] Title_Txt = new TMP_Text[3];      // 이미지에 따른 증강 제목 
    public TMP_Text[] Content_Txt = new TMP_Text[3];    // 증강 제목에 따른 내용 
    public Sprite[] content_Spr = new Sprite[6];
    // 현재 띄워진 증강체에 어떤 내용이 들어가있는지를 표시해야함 
    List<int> icurrentReinforceBodys = new List<int>() { 4, 1, 5 };

    bool didSelectReinforceBody = false;


    ExpUIManager expUIManager;

    private void Start()
    {
        expUIManager = GameObject.Find("UIManager").GetComponent<ExpUIManager>();
        SetUI();
        ChangeReinforceCanvasState(false);
    }

    

    /// <summary>
    /// 증강 내용 이미지를 변경하는 함수
    /// </summary>
    public void ChangeImgsContent()
    {
        for (int i = 0; i < Content_Img.Length; i++)
        {
            Content_Img[i].sprite = content_Spr[icurrentReinforceBodys[i]]; 
        }
            
    }

    void ChangeTitleTxt()
    {
        for (int i = 0; i < Title_Txt.Length; i++)
            Title_Txt[i].text = ReturnTitleTxt(icurrentReinforceBodys[i]);
    }

    string ReturnTitleTxt(int n)
    {
        /*
       *  0 : 최대 체력
       *  1 : 공격력
       *  2 : 주문력
       *  3 : 최대 마나
       *  4 : 팔레트
       *  5 : 스킬
       */
        switch (n)
        {
            case 0:
                return "MaxHp";
            case 1:
                return "AttackPower";
            case 2:
                return "MagicalPower";
            case 3:
                return "MaxMana";
            case 4:
                return "Palette";
            case 5:
                return "Skill";
            default:
                Debug.LogWarning(n  + " 인덱스 값 받음 잘못된 입력");
                return "Error";
        }
    }

    void ChangeContentTxt()
    {
        for (int i = 0; i < Content_Txt.Length; i++)
            Content_Txt[i].text = ReturnContentTxt(icurrentReinforceBodys[i]);
    }

    string ReturnContentTxt(int n)
    {
        /*
       *  0 : 최대 체력
       *  1 : 공격력
       *  2 : 주문력
       *  3 : 최대 마나
       *  4 : 팔레트
       *  5 : 스킬
       */
        switch (n)
        {
            case 0:
                return "Max Hp ++";
            case 1:
                return "AttackPower ++";
            case 2:
                return "MagicalPower ++";
            case 3:
                return "MaxMana ++";
            case 4:
                return "Color A ++";
            case 5:
                return "Skill A ++";
            default:
                Debug.LogWarning(n + " 인덱스 값 받음 잘못된 입력");
                return "Error";
        }
    }

    /// <summary>
    /// 증강체를 선택했을 경우 동작하는 함수
    /// </summary>
    public void SelectReinforcedBody()
    {
        GameObject clickBtn = EventSystem.current.currentSelectedGameObject;

        for (int i = 0; i < Content_Img.Length; i++)
        {
            if (clickBtn.name.Contains(i.ToString()))
            {
                ChangeDidSelectReinforceBody(true);
                ReinforceSelectedBody(i);
                ChangeReinforceCanvasState(false);
                expUIManager.ResetExpBar();
                break;
            }
        }
    }

    /// <summary>
    /// 선택한 증강체를 강화한다. 
    /// </summary>
    /// <param name="n">강화할 증강체 번호</param>
    void ReinforceSelectedBody(int n)
    {
        /*
         *  0 : 최대 체력
         *  1 : 공격력
         *  2 : 주문력
         *  3 : 최대 마나
         *  4 : 팔레트
         *  5 : 스킬
         */
        switch (n)
        {
            case 0:
                // playerScripts.MaxHp 값 증가 
                break;
            case 1:
                // playerScripts.attackPower 값 증가 
                break;
            case 2:
                // playerScripts.magicalPower 값 증가 
                break;
            case 3:
                // playerScripts. 값 증가 
                break;
            case 4:
                // paletteScripts.totalColor 값 추가
                break;
            case 5:
                // playerScripts.skill 추가 
                break;

        }
    }

    /// <summary>
    /// icurrentReinforceBodys 리스트에 값을 추가한다. 
    /// </summary>
    /// <param name="reinforcedBodyNum">추가할 증강체의 번호</param>
    void AddReinforceBody(int reinforcedBodyNum)
    {
        icurrentReinforceBodys.Add(reinforcedBodyNum);
    }

    /// <summary>
    /// icurrentReinforceBodys 리스트 내에 값을 전부 지운다. 
    /// </summary>
    void ResetICurrentReinforceBodys()
    {
        icurrentReinforceBodys.Clear();
    }

    /// <summary>
    /// icurrentReinforceBodys의 값을 설정한다. 
    /// </summary>
    void SetICurrentReinforceBodys()
    {
        int randomNum = 0;
        for (int i = 0; i < 3; i++)
        {
            randomNum = ReturnReinforcedBodyRandNum();
            AddReinforceBody(randomNum);
        }     
    }

    /// <summary>
    /// 강화할 증강체의 번호를 랜덤으로 리턴한다. 
    /// </summary>
    /// <returns>강화할 증강체의 번호</returns>
    int ReturnReinforcedBodyRandNum()
    {
        int randomNum = Random.Range(0, 6); // 0 ~ 6
        while (icurrentReinforceBodys.IndexOf(randomNum) != -1) // icurrentReinforceBodys 리스트에 이미 증강체 번호가 있는 경우
            randomNum = Random.Range(0, 6); // 다시 랜덤으로 색깔 배정
        return randomNum;
    }


    void SetUI()
    {
        ResetICurrentReinforceBodys();  // icurrentReinforceBodys 리셋
        SetICurrentReinforceBodys();    // icurrentReinforceBodys 값 설정
        //Debug.Log(icurrentReinforceBodys.Count);
        ChangeImgsContent(); // 이미지 변경
        ChangeTitleTxt();    // 제목 텍스트 변경
        ChangeContentTxt();  // 내용 텍스트 변경
    }


    public void ChangeReinforceCanvasState(bool value)
    {
        Reinforce_Canvas.gameObject.SetActive(value);
    }

    public void ActivateReinforceUI()
    {
        ChangeReinforceCanvasState(true);
        SetUI();
    }

    public void ChangeDidSelectReinforceBody(bool value)
    {
        didSelectReinforceBody = value;
    }

    public bool ReturnDidSelectReinforceBody()
    {
        return didSelectReinforceBody;
    }
}
